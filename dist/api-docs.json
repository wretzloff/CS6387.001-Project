{
    "swagger": "2.0",
    "info": {
        "description": "Public-facing endpoints to interact with our API.",
        "version": "1.0.0",
        "title": "UTD Textbook Exchange"
    },
    "tags": [{
        "name": "Authenticate",
        "description": "For Authenticating requests"
    },
	  {
        "name": "my-books",
        "description": "User's textbook info"
    },
    {
        "name": "forSaleEntries",
        "description": "For operations on the 'For Sale List'"
    },
  	{
        "name": "transactions",
        "description": "For operations regarding transactions"
    },
    {
        "name": "messages",
        "description": "For operations regarding messages"
    },
    {
        "name": "salePrice",
        "description": "For operations regarding a book's sale price"
    }],
    "schemes": ["http"],
    "paths": {
        "/Authenticate": {
            "post": {
                "tags": ["Authenticate"],
                "summary": "Send a username and password in order to get an authorization token",
                "description": "Side effects: none",
                "operationId": "issueToken",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "username",
                    "in": "formData",
                    "description": "",
                    "required": true,
                    "type": "string",
                    "default": "wbr071000"
                },
                {
                    "name": "password",
                    "in": "formData",
                    "description": "",
                    "required": true,
                    "type": "string",
                    "default": "thisIsARandomPassword"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/200AuthenticationResult"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials.",
                        "schema": {
                            "$ref": "#/definitions/401AuthenticationResult"
                        }
                    },
					          "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/500Result"
                        }
                    }
                }
            }
        },
        "/my-books/{userId}/{productionOrStubBooks}": {
            "get": {
                "tags": ["my-books"],
                "summary": "Get a list of user's required textbooks for all semesters",
                "description": "Side effects: none",
                "operationId": "getMyBooks",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "userId",
                    "in": "path",
                    "description": "ID of User whose books you want",
                    "required": true,
                    "type": "integer",
                    "format": "int",
                    "default": 1
                },
				{
                    "name": "productionOrStubBooks",
                    "in": "path",
                    "description": "either 'stub' or 'production'",
                    "required": true,
                    "type": "string",
                    "default": "stub"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/200myBooksResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/401Result"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/500Result"
                        }
                    }
                },
                "security": [{
                    "authorization": []
                }]
            }
        },
        "/my-books/cover/isbn/{isbn}": {
            "get": {
                "tags": ["my-books"],
                "summary": "Get a book's cover image",
                "description": "Side effects: none",
                "operationId": "getBookCover",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "isbn",
                    "in": "path",
                    "description": "ISBN of book for which you want the cover",
                    "required": true,
                    "type": "string",
                    "default": "9780133778816"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/200bookCoverResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/401Result"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/500Result"
                        }
                    }
                },
                "security": [{
                    "authorization": []
                }]
            }
        },
        "/forSaleEntries/isbn/{isbn}": {
            "get": {
                "tags": ["forSaleEntries"],
                "summary": "Get a list of books for sale for the given ISBN",
                "description": "Side effects: none",
                "operationId": "getForSaleEntriesByIsbn",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "isbn",
                    "in": "path",
                    "description": "ISBN of book for which you want listings for sale.",
                    "required": true,
                    "type": "string",
                    "default": "9780133778816"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/200forSaleEntriesIsbnGetResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/401Result"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/500Result"
                        }
                    }
                },
                "security": [{
                    "authorization": []
                }]
            }
        },
        "/forSaleEntries/userId/{userId}": {
            "get": {
                "tags": ["forSaleEntries"],
                "summary": "Get a list of books for sale for the given User Id",
                "description": "Side effects: none",
                "operationId": "getForSaleEntriesByUser",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "userId",
                    "in": "path",
                    "description": "User Id of user for which you want listings for sale.",
                    "required": true,
                    "type": "integer",
                    "format": "int",
                    "default": 1
                    
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/200forSaleEntriesUserGetResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/401Result"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/500Result"
                        }
                    }
                },
                "security": [{
                    "authorization": []
                }]
            }
        },
        "/forSaleEntries/condition": {
            "get": {
                "tags": ["forSaleEntries"],
                "summary": "Get all the possible values for a For Sale entry's condition, along with a description of each.",
                "description": "Side effects: none",
                "operationId": "getPossibleForSaleEntryConditions",
                "produces": ["application/json"],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/200forSaleEntryConditionResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/500Result"
                        }
                    }
                },
                "security": []
            }
        },
        "/forSaleEntries": {
            "post": {
                "tags": ["forSaleEntries"],
                "summary": "Post a book for sale",
                "description": "Side effects: An entry is added to the For Sale list with the given ISBN, author, price, condition, and description.",
                "operationId": "postBookForSale",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "title",
                    "in": "formData",
                    "description": "Title of the book being posted for sale.",
                    "required": true,
                    "type": "string",
                    "default": "STARTING OUT WITH C++ FROM CNTRL (LOOSEPGS)(W/OUT ACCESS)"
                },
				{
                    "name": "isbn",
                    "in": "formData",
                    "description": "ISBN of the book being posted for sale.",
                    "required": true,
                    "type": "string",
                    "default": "9780133778816"
                },
				        {
                    "name": "author",
                    "in": "formData",
                    "description": "Author of the book being posted for sale.",
                    "required": true,
                    "type": "string",
                    "default": "Wallace Wang"
                },
                {
                    "name": "price",
                    "in": "formData",
                    "description": "Price of the book being posted for sale.",
                    "required": true,
                    "type": "number",
                    "format": "double",
                    "default": 32.99
                },
                {
                    "name": "condition",
                    "in": "formData",
                    "description": "Condition of the book being posted for sale.",
                    "required": true,
                    "type": "integer",
                    "format": "int",
                    "default": 1
                },
                {
                    "name": "description",
                    "in": "formData",
                    "description": "Description of the book being posted for sale.",
                    "required": true,
                    "type": "string",
                    "default": "Unused. Still in original packaging."
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/200forSaleEntriesPostResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/401Result"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/500Result"
                        }
                    }
                },
                "security": [{
                    "authorization": []
                }]
            }
        },
        "/transactions/userId/{userId}": {
            "get": {
                "tags": ["transactions"],
                "summary": "Get a list of open transactions for the given User Id",
                "description": "Side effects: none",
                "operationId": "getTransactionsByUser",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "userId",
                    "in": "path",
                    "description": "User Id of user for which you want a list of open transactions.",
                    "required": true,
                    "type": "integer",
                    "format": "int",
                    "default": 1
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/200getTransactionResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/401Result"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/500Result"
                        }
                    }
                },
                "security": [{
                    "authorization": []
                }]
            }
        },
        "/transactions/transaction/{transactionId}": {
            "get": {
                "tags": ["transactions"],
                "summary": "Get the transaction specified by the given transaction Id",
                "description": "Side effects: none",
                "operationId": "getTransactionById",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "transactionId",
                    "in": "path",
                    "description": "Transaction Id of transaction you want.",
                    "required": true,
                    "type": "integer",
                    "format": "int",
                    "default": 1
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/200getTransactionResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/401Result"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/500Result"
                        }
                    }
                },
                "security": [{
                    "authorization": []
                }]
            }
        },
        "/transactions": {
            "post": {
                "tags": ["transactions"],
                "summary": "Buy a book",
                "description": "Side effects: 1) A Transaction is created between the buyer and the seller. 2) An automated message is sent to the seller to notify them that their book has been sold.",
                "operationId": "buyBook",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "forSaleId",
                    "in": "formData",
                    "description": "forSaleId of the book being bought.",
                    "required": true,
                    "type": "integer",
                    "format": "int",
                    "default": 1
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/200buyBookResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/401Result"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/500Result"
                        }
                    }
                },
                "security": [{
                    "authorization": []
                }]
            }
        },
        "/transactions/status": {
            "get": {
                "tags": ["transactions"],
                "summary": "Get all the possible values for a Transaction's status, along with a description of each.",
                "description": "Side effects: none",
                "operationId": "getPossibleTransactionStatuses",
                "produces": ["application/json"],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/200transactionStatusResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/500Result"
                        }
                    }
                },
                "security": []
            }
        },
        "/transactions/transaction/{transactionId}/complete": {
            "post": {
                "tags": ["transactions"],
                "summary": "Mark a transaction as complete, given the transaction Id",
                "description": "Side effects: Flags transaction as completed.",
                "operationId": "markTransactionComplete",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "transactionId",
                    "in": "path",
                    "description": "Transaction Id of transaction.",
                    "required": true,
                    "type": "integer",
                    "format": "int",
                    "default": 1
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/200transactionCompleteResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/401Result"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/500Result"
                        }
                    }
                },
                "security": [{
                    "authorization": []
                }]
            }
        },
        "/transactions/transaction/{transactionId}/cancel": {
            "post": {
                "tags": ["transactions"],
                "summary": "Mark a transaction as cancelled, given the transaction Id",
                "description": "Side effects: Flags transaction as cancelled.",
                "operationId": "markTransactionCancelled",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "transactionId",
                    "in": "path",
                    "description": "Transaction Id of transaction.",
                    "required": true,
                    "type": "integer",
                    "format": "int",
                    "default": 1
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/200transactionCancelResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/401Result"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/500Result"
                        }
                    }
                },
                "security": [{
                    "authorization": []
                }]
            }
        },
        "/messages/conversations/{userId}": {
            "get": {
                "tags": ["messages"],
                "summary": "Get a list of conversations for the given User Id",
                "description": "Side effects: none",
                "operationId": "getConversationsByUser",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "userId",
                    "in": "path",
                    "description": "User Id of user for which you want conversations.",
                    "required": true,
                    "type": "integer",
                    "format": "int",
                    "default": 1
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/200getConversationsResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/401Result"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/500Result"
                        }
                    }
                },
                "security": [{
                    "authorization": []
                }]
            }
        },
        "/messages/{conversationId}/limit/{limit}/before/{startingWithId}": {
            "get": {
                "tags": ["messages"],
                "summary": "a list of the last X messages within the conversation, starting at the message specified by :startingWithId, including the message specified by :startingWithId",
                "description": "Side effects: none",
                "operationId": "getMessagesBefore",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "conversationId",
                    "in": "path",
                    "description": "Conversation Id of conversation for which you want messages.",
                    "required": true,
                    "type": "integer",
                    "format": "int",
                    "default": 1
                },
                {
                    "name": "limit",
                    "in": "path",
                    "description": "Number of messages that you want returned.",
                    "required": true,
                    "type": "integer",
                    "format": "int",
                    "default": 15
                },
                {
                    "name": "startingWithId",
                    "in": "path",
                    "description": "Message Id of message to start counting at.",
                    "required": true,
                    "type": "integer",
                    "format": "int",
                    "default": 57
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/200getmessagesResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/401Result"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/500Result"
                        }
                    }
                },
                "security": [{
                    "authorization": []
                }]
            }
        },
        "/messages/{conversationId}/limit/{limit}/after/{startingWithId}": {
            "get": {
                "tags": ["messages"],
                "summary": "a list of the X messages within the conversation that were received after :startingWithId, excluding the message specified by :startingWithId",
                "description": "Side effects: none",
                "operationId": "getMessagesAfter",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "conversationId",
                    "in": "path",
                    "description": "Conversation Id of conversation for which you want messages.",
                    "required": true,
                    "type": "integer",
                    "format": "int",
                    "default": 1
                },
                {
                    "name": "limit",
                    "in": "path",
                    "description": "Number of messages that you want returned.",
                    "required": true,
                    "type": "integer",
                    "format": "int",
                    "default": 15
                },
                {
                    "name": "startingWithId",
                    "in": "path",
                    "description": "Message Id of message to start counting at.",
                    "required": true,
                    "type": "integer",
                    "format": "int",
                    "default": 57
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/200getmessagesResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/401Result"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/500Result"
                        }
                    }
                },
                "security": [{
                    "authorization": []
                }]
            }
        },
        "/messages": {
            "post": {
                "tags": ["messages"],
                "summary": "Send a message",
                "description": "Side effects: a message is posted to the designated conversation.",
                "operationId": "sendMessage",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "conversationId",
                    "in": "formData",
                    "description": "conversationId of the conversation you're posting to.",
                    "required": true,
                    "type": "integer",
                    "format": "int",
                    "default": 1
                },
                {
                    "name": "message",
                    "in": "formData",
                    "description": "Message body",
                    "required": true,
                    "type": "string",
                    "default": "Lets meet in the student union Friday afternoon. I can pay cash."
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/200sendMessageResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/401Result"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/500Result"
                        }
                    }
                },
                "security": [{
                    "authorization": []
                }]
            }
        },
        "/salePrice/suggested/isbn/{isbn}": {
            "get": {
                "tags": ["salePrice"],
                "summary": "Get the suggested sale price for the given isbn",
                "description": "Side effects: none",
                "operationId": "getSuggestedSalePrice",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "isbn",
                    "in": "path",
                    "description": "isbn of the book for which you want the suggested sale price.",
                    "required": true,
                    "type": "string",
                    "default": "9780133778816"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/200suggestedSalePriceResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/401Result"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/500Result"
                        }
                    }
                },
                "security": [{
                    "authorization": []
                }]
            }
        },
        "/salePrice/thirdParty/isbn/{isbn}": {
            "get": {
                "tags": ["salePrice"],
                "summary": "Get the third party sale price for the given isbn",
                "description": "Side effects: none",
                "operationId": "getThirdPartySalePrice",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "isbn",
                    "in": "path",
                    "description": "isbn of the book for which you want the third party sale price.",
                    "required": true,
                    "type": "string",
                    "default": "9780133778816"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/200thirdPartySalePriceResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/401Result"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/500Result"
                        }
                    }
                },
                "security": [{
                    "authorization": []
                }]
            }
        }
    },
    "securityDefinitions": {
        "authorization": {
            "type": "apiKey",
            "name": "authorization",
            "in": "header"
        }
        
    },
    "definitions": {
		"200AuthenticationResult": {
			    "type": "object",
			    "properties": {
				      "success": {
					      "type": "boolean",
						  "default": true
				      },
				      "token": {
					      "type": "string",
						  "default": "JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.MQ.4p-Xcp_Aqs6evX2L8AylTbb1woTuxtlgL-Wg1QMXYYk"
				      },
					  "userId": {
					    "type": "integer",
					    "format": "int",
						"default": 1
					  },
					  "userNickname": {
					      "type": "string",
						  "default": "Will R"
				      }
			     }
		},
		"200myBooksResult": {
			    "type": "array",
			    "items": {
				      "$ref": "#/definitions/getRequiredTextbooksRecord"
			     }
		},
		"200forSaleEntriesIsbnGetResult": {
			    "type": "array",
			    "items": {
				      "$ref": "#/definitions/forSaleRecord"
			     }
		},
		"200forSaleEntriesUserGetResult": {
			    "type": "array",
			    "items": {
				      "$ref": "#/definitions/forSaleRecord"
			     }
		},
		"200forSaleEntriesPostResult": {
			    "type": "object",
			    "properties": {
				      "success": {
					      "type": "boolean",
						  "default": true
				      },
				      "msg": {
					      "type": "string",
						  "default": "Book has been posted for sale."
				      },
					  "forSaleId": {
					      "type": "integer",
						  "format": "int",
						  "default": 265
				      }
			     }
		},
		"200forSaleEntryConditionResult": {
			    "type": "array",
			    "items": {
				      "$ref": "#/definitions/conditionTypeRecord"
			     }
		},
		"200transactionStatusResult": {
			    "type": "array",
			    "items": {
				      "$ref": "#/definitions/transactionStatusRecord"
			     }
		},
		"200buyBookResult": {
			    "type": "object",
			    "properties": {
				      "success": {
					      "type": "boolean",
						  "default": true
				      },
				      "msg": {
					      "type": "string",
						  "default": "Book has put on hold."
				      },
					  "transactionId": {
					      "type": "integer",
						  "format": "int",
						  "default": 952
				      }
			     }
		},
		"200getTransactionResult": {
			    "type": "array",
			    "items": {
				      "$ref": "#/definitions/transactionRecord"
			     }
		},
		"200transactionCompleteResult": {
			    "type": "object",
			    "properties": {
				      "success": {
					      "type": "boolean",
						  "default": true
				      },
				      "msg": {
					      "type": "string",
						  "default": "Transaction has been marked complete."
				      }
			     }
		},
		"200transactionCancelResult": {
			    "type": "object",
			    "properties": {
				      "success": {
					      "type": "boolean",
						  "default": true
				      },
				      "msg": {
					      "type": "string",
						  "default": "Transaction has been cancelled."
				      }
			     }
		},
		"200sendMessageResult": {
			    "type": "object",
			    "properties": {
				      "success": {
					      "type": "boolean",
						  "default": true
				      },
				      "msg": {
					      "type": "string",
						  "default": "Your message has been sent."
				      },
					  "messageId": {
					      "type": "integer",
						  "format": "int",
						  "default": 176
				      }
			     }
		},
		"200getConversationsResult": {
			    "type": "array",
			    "items": {
				      "$ref": "#/definitions/conversation"
			     }
		},
		"200getmessagesResult": {
			    "type": "array",
			    "items": {
				      "$ref": "#/definitions/message"
			     }
		},
		"200suggestedSalePriceResult": {
			    "type": "object",
			    "properties": {
				      "isbn": {
					      "type": "string",
						    "default": "9780133778816"
				      },
				      "suggestedSalePrice": {
                "type": "number",
					      "format": "double",
						    "default": 51.46
				      },
				      "reason": {
					      "type": "string",
						    "default": "The lowest price currently listed is $51.46."
				      }
			     }
		},
		"200thirdPartySalePriceResult": {
			    "type": "array",
			    "items": {
				      "$ref": "#/definitions/thirdPartySalePriceRecord"
			     }
		},
		"401Result": {
			    "type": "object",
			    "properties": {
				      "success": {
					      "type": "boolean",
						  "default": false
				      },
				      "msg": {
					      "type": "string",
						  "default": "Authentication failed."
				      }
			     }
		},
		"401AuthenticationResult": {
			    "type": "object",
			    "properties": {
				      "success": {
					      "type": "boolean",
						  "default": false
				      },
				      "msg": {
					      "type": "string",
						  "default": "Invalid credentials."
				      }
			     }
		},
		"500Result": {
			    "type": "object",
			    "properties": {
				      "success": {
					      "type": "boolean",
						  "default": false
				      },
				      "msg": {
					      "type": "string",
						  "default": "Internal Server Error."
				      }
			     }
		},
		"getRequiredTextbooksRecord": {
			    "type": "object",
			    "properties": {
				      "classNumber": {
					      "type": "string",
						    "default": "CS1336.001.17S"
				      },
					  "className": {
					      "type": "string",
						    "default": "Programming Fundamentals"
				      },
				      "classBooks": {
				        "type": "array",
				        "items": {
				          "$ref": "#/definitions/classBook" 
				        }
				      }
			     }
		},
		"classBook": {
			    "type": "object",
			    "properties": {
				      "bookName": {
					      "type": "string",
						    "default": "STARTING OUT WITH C++ FROM CNTRL (LOOSEPGS)(W/OUT ACCESS)"
				      },
				      "bookEdition": {
					      "type": "string",
						    "default": "PH 8th Edition 2015"
				      },
				      "bookAuthor": {
					      "type": "string",
						    "default": "GADDIS"
				      },
				      "bookISBN": {
					      "type": "string",
						    "default": "9780133778816"
				      },
				      "book_required_recommended": {
					      "type": "string",
						    "default": "Required Text"
				      }
			     }
		},
		"forSaleRecord": {
			    "type": "object",
			    "properties": {
					"forSaleId": {
						"type": "integer",
						"format": "int",
						"default": 217
				    },
					"seller_InternalUserId": {
					    "type": "integer",
					    "format": "int",
						"default": 1
				    },
					"datePosted": {
					    "type": "string",
						"default": "2017-01-22 00:02:40"
				    },
				    "status": {
					    "type": "string",
						"default": "On Hold"
				    },
					"transactionId": {
						"type": "integer",
						"format": "int",
						"default": 74
				    },
					"isbn": {
					    "type": "string",
						"default": "9780133778816"
				    },
				    "author": {
					    "type": "string",
						"default": "GADDIS"
				    },
					"title": {
					    "type": "string",
						"default": "STARTING OUT WITH C++ FROM CNTRL (LOOSEPGS)(W/OUT ACCESS)"
				    },
				    "price": {
					    "type": "number",
					    "format": "double",
						"default": 37.92
				    },
				    "description": {
					    "type": "string",
						"default": "Light wear, some hilighting"
				    },
					"condition": {
						"type": "integer",
						"format": "int",
						"default": 0
				    },
					"conditionDescription": {
					    "type": "string",
						"default": "Used - Like New"
				    },
					"seller_nickname": {
					    "type": "string",
						"default": "Will R"
				    }
			     }
		},
		"transactionRecord": {
			    "type": "object",
			    "properties": {
					"transactionId": {
						"type": "integer",
						"format": "int",
						"default": 139
					},
					"buyerOrSeller": {
						"type": "string",
						"default": "seller"
					},
					"buyer_Nickname": {
					    "type": "string",
						"default": "Daren C"
					},
					"buyer_InternalUserId": {
					    "type": "integer",
					    "format": "int",
						"default": 2
				    },
					"transactionDateTime": {
					    "type": "string",
						"default": "2017-02-22 00:02:40"
				    },
					"status": {
					    "type": "string",
						"default": "Pending"
				    },
					"conversationId": {
					    "type": "integer",
					    "format": "int",
						"default": 87
				    },
					"forSaleId": {
					    "type": "integer",
					    "format": "int",
						"default": 109
				    },
					"title": {
					    "type": "string",
						"default": "Software Engineering for Dummies"
					},
					"author": {
					    "type": "string",
						"default": "Wallace Wang"
					},
					"ISBN": {
					    "type": "string",
						"default": "9780133778816"
				    },
					"price": {
					    "type": "number",
					    "format": "double",
						"default": 101.99
				    }
			     }
		},
		"thirdPartySalePriceRecord": {
			    "type": "object",
			    "properties": {
				      "price": {
                "type": "number",
					      "format": "double",
						    "default": 51.46
				      },
				      "source": {
					      "type": "string",
						    "default": "Amazon"
				      },
				      "link": {
					      "type": "string",
						    "default": "https://www.amazon.com/Starting-Control-Structures-through-Objects/dp/0133778819/ref=sr_1_1?ie=UTF8&qid=1487534860&sr=8-1&keywords=9780133778816"
				      }
			     }
		},
    "transactionStatusRecord": {
        "type": "object",
        "properties": {
			    "id": {
				    "type": "string",
				    "default": "0"
			    },
			    "description": {
				    "type": "string",
				    "default": "Pending"
			    }
		    }
    },
    "conditionTypeRecord": {
        "type": "object",
        "properties": {
			    "id": {
				    "type": "string",
				    "default": "0"
			    },
			    "description": {
				    "type": "string",
				    "default": "New"
			    }
		    }
    },
    "message": {
        "type": "object",
        "properties": {
				"messageId": {
				    "type": "integer",
				    "format": "int",
					"default": 57
			    },
				"to": {
				    "type": "integer",
				    "format": "int",
					"default": 2
			    },
				"from": {
				    "type": "integer",
				    "format": "int",
					"default": 7
			    },
			    "messageDateTime": {
				    "type": "string",
				    "default": "2017-02-22 00:02:40"
			    },
			    "messageContent": {
				    "type": "string",
				    "default": "Let's meet in the student union Friday afternoon. I can pay cash."
			    },
			    "unread": {
				    "type": "boolean",
					"default": true
			    }
		    }
    },
    "conversation": {
        "type": "object",
        "properties": {
			    "conversationId": {
				    "type": "integer",
				    "format": "int",
					"default": 1
			    },
			    "conversationPartner": {
				    "type": "string",
				    "default": "Jonathan R."
			    },
			    "numOfUnreadMessages": {
				    "type": "integer",
				    "format": "int",
					"default": 2
			    },
			    "latestMessage": {
				        "type": "object",
				        "$ref": "#/definitions/message"
				 }
			    
		    }
    },
    "200bookCoverResult": {
	    "type": "object",
		"properties": {
			"isbn": {
				"type": "string",
				"default": "9780133778816"
			},
			"smallPic": {
				"type": "object",
				"properties": {
					"url": {
						"type": "string",
						"default": "https://images-na.ssl-images-amazon.com/images/ihefeufe.jpg"
					},
					"units": {
						"type": "string",
						"default": "pixels"
					},
					"height": {
						"type": "integer",
						"format": "int",
						"default": 390
					},
					"width": {
						"type": "integer",
						"format": "int",
						"default": 390
					}
				}
			},
			"mediumPic": {
				"type": "object",
				"properties": {
					"url": {
						"type": "string",
						"default": "https://images-na.ssl-images-amazon.com/images/kjwdnwqjnd.jpg"
					},
					"units": {
						"type": "string",
						"default": "pixels"
					},
					"height": {
						"type": "integer",
						"format": "int",
						"default": 700
					},
					"width": {
						"type": "integer",
						"format": "int",
						"default": 700
					}
				}
			},
			"largePic": {
				"type": "object",
				"properties": {
					"url": {
						"type": "string",
						"default": "https://images-na.ssl-images-amazon.com/images/oifebflkn.jpg"
					},
					"units": {
						"type": "string",
						"default": "pixels"
					},
					"height": {
						"type": "integer",
						"format": "int",
						"default": 1000
					},
					"width": {
						"type": "integer",
						"format": "int",
						"default": 1000
					}
				}
			}
		}
	}
    
    }
}   